openapi: "3.0.0"
info:
  version: 1.0.0
  title: Flashcards Word Service API
  description: API spec for Hebrew flashcards
  contact:
    name: Chris Chapman
    email: chrischapman900@gmail.com
    url: http://chrischapman.co
servers:
  - url: http://flashcards.api.localhost/api
paths:
  /words:
    get:
      tags:
      - Word
      summary: Get a list of words
      description: |
        Returns all the words of the specified parameters
      operationId: getWords
      parameters:
        - name: partOfSpeech
          in: query
          description: Part of speech to filter by
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: offset to go to the next results
          required: false
          schema:
            type: integer
            format: int32
        - name: confidedenceThreshold
          in: query
          description: maximum confidence to filter by
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: words response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Word'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /words/{word_id}:
    get:
      summary: Returns a word, designated by the objectId
      tags:
      - Word
      operationId: getWord
      parameters:
        - name: word_id
          in: path
          description: ID of word to fetch
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: word response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Word'
        '404':
          description: word not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{user_id}:
    parameters:
      - name: user_id
        in: path
        description: ID of user to fetch
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
      - Word
      - User
      summary: Get a user's list of words
      description: |
        Returns all the words of the specified parameters
      operationId: getUser
      responses:
        '200':
          description: words response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{user_id}/words/{word_id}:
    parameters:
      - name: user_id
        in: path
        description: ID of user
        required: true
        schema:
          type: string
          format: uuid
      - name: word_id
        in: path
        description: ID of word to update
        required: true
        schema:
          type: string
          format: uuid
    put:
      tags:
      - Word
      - User
      summary: Update user's word
      description: |
        Update a word in a user's list of words
      operationId: updateUserWord
      requestBody:
        description: Information required to submit a travel insurance Lead
        content:
          application/json:
            schema:
              properties:
                confidence:
                  type: number
                  example: 4
      responses:
        '200':
          description: words response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Word'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Word:
      required:
        - name
      properties:
        _id:
          type: string
          example: '5a382e792ac9eace8babf617'
        english:
          type: string
          example: to come
        hebrew:
          type: string
          example: בוא
        partOfSpeech:
          type: string
          example: verb
        count:
          type: integer
          description: The number of occurances in the Torah
          example: 2579
    User:
      required:
        - name
      properties:
        _id:
          type: string
          example: '5a382e792ac9eace8babf617'
        name:
          type: string
          example: 'John Doe'
        words:
          type: array
          items:
            properties:
              word_id:
                type: string
                example: '5a382e792ac9eace8babf617'
              confidence:
                $ref: '#/components/schemas/Confidence'
    Confidence:
      type: number
      example: 3
      minimum: 1
      maximum: 5
    Error:
      required:
        - message
      properties:
        message:
          type: string
        code:
          type: integer